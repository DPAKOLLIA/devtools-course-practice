// Copyright 2022 Trofimoff Vladimir

#include <gtest/gtest.h>

#include "include/complex_number.h"

TEST(Trofimoff_Vladimir_ComplexNumberTest, Can_Create_Zero) {
    // Arrange
    double re = 0.0;
    double im = 0.0;

    // Act
    ComplexNumber z(re, im);

    // Assert
    EXPECT_EQ(re, z.getRe());
    EXPECT_EQ(im, z.getIm());
}

TEST(Trofimoff_Vladimir_ComplexNumberTest, Can_Create_Negative_Complex_Number) {
    double re = -10.1;
    double im = -40.1;

    ComplexNumber z(re, im);

    ASSERT_DOUBLE_EQ(re, z.getRe());
    ASSERT_DOUBLE_EQ(im, z.getIm());
}

TEST(Trofimoff_Vladimir_ComplexNumberTest, Can_Add_Negative_Complex_Numbers) {
    double re1 = -10.1;
    double im1 = -40.1;
    double re2 = -15.1;
    double im2 = -45.1;

    ComplexNumber z1(re1, im1);
    ComplexNumber z2(re2, im2);
    ComplexNumber sum;
    sum = z1 + z2;

    ASSERT_DOUBLE_EQ(re1 + re2, sum.getRe());
    ASSERT_DOUBLE_EQ(im1 + im2, sum.getIm());
}


TEST(Trofimoff_Vladimir_ComplexNumberTest, Correct_Compare_Negative_Numbers_With_Non-negative_Ones) {
    double re1 = 40.1;
    double im1 = 10.1;
    double re2 = -40.1;
    double im2 = -10.1;

    ComplexNumber z1(re1, im1);
    ComplexNumber z2(re2, im2);

    ASSERT_TRUE(z1 != z2);
}
